//
//  SignInFactorable.swift
//  news-app
//
//  Created by minhnv1 on 01/03/2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit

extension AppInjector {
    struct SignInInjector {}
}

extension AppInjector.SignInInjector: SignInFactorable {}

protocol SignInFactorable: SignInInteractorFactorable, SignInPresenterFactorable, SignInRouterFactorable, SignInServicesFactorable { }

protocol SignInInteractorFactorable {
    typealias InteractableFactory = SignInPresenterFactorable & SignInServicesFactorable

    func makeInteractor(factory: InteractableFactory, viewController: SignInDisplayLogic?, dataSource: SignInModel.DataSource) -> SignInInteractable
}

protocol SignInPresenterFactorable {
    func makePresenter(viewController: SignInDisplayLogic?) -> SignInPresentationLogic
}

protocol SignInRouterFactorable {
    func makeRouter(viewController: UIViewController?) -> SignInRouting
}

extension SignInFactorable {

    func makeInteractor(factory: InteractableFactory, viewController: SignInDisplayLogic?, dataSource: SignInModel.DataSource) -> SignInInteractable {
        SignInInteractor(factory: factory, viewController: viewController, dataSource: dataSource)
    }

    func makePresenter(viewController: SignInDisplayLogic?) -> SignInPresentationLogic {
        SignInPresenter(viewController: viewController)
    }

    func makeRouter(viewController: UIViewController?) -> SignInRouting {
        SignInRouter(viewController: viewController)
    }
}


class ConcreteSignInFactory: SignInFactorable {}

// MARK: - Service Factorable
protocol SignInServicesFactorable {
    func makeEmailValidatorService() -> EmailValidatorServiceable
    func makePasswordValidatorService() -> PasswordValidatorServicable
    func makeSignUpService() -> SignUpServiceable
    func makeSignInService() -> SignInServiceable
}

extension SignInServicesFactorable {

    func makePasswordValidatorService() -> PasswordValidatorServicable {
        return PasswordValidatorService()
    }

    func makeEmailValidatorService() -> EmailValidatorServiceable {
        return EmailValidatorService()
    }

    func makeSignUpService() -> SignUpServiceable {
        return KeyChainSignUpAdapter()
    }
    
    func makeSignInService() -> SignInServiceable {
        return KeychainSignInAdapter()
    }
}
