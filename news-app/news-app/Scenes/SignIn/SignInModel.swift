//
//  SignInModel.swift
//  news-app
//
//  Created by minhnv1 on 01/03/2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//


import Foundation

enum SignInModel {

    enum Request {
        case userNameDidChange(String?)
        case passwordDidChange(String?)
        case setupLocalized
        case setupForgotButtonState
        case setupSignInUpButtonInitialState
        case signInOrSignUp
    }

    enum Response {
        case userNameHasData(Bool)
        case passwordHasData(Bool)
        case signInUpButtonShouldChangeState(_ isEnable: Bool)
        case setupLocalizedCompleted(_ screenType: DataSource.ScreenType)
        case setupForgotButtonStateCompleted(_ screenType: DataSource.ScreenType)
        case signUpResult(_ result: SignUpResult)
    }

    enum ViewModel {
        case reloadUserNameTextField(_ hasData: Bool)
        case reloadPasswordTextField(_ hasData: Bool)
        case reloadSignInUpButtonState(_ isEnable: Bool)
        case localizedStrings(_ value: DataSource.LocalizedString)
        case forgotPasswordState(_ isShow: Bool)
        case signUpFail(_ errorMessage: String?)
        case signUpSuccess
    }

    enum Route {
        case dismissSignInScene
        case xScene(xData: Int)
    }

    struct DataSource {
        enum ScreenType {
            case signIn
            case signUp
        }
        struct LocalizedString {
            var loginUpButtonTitle: String?
            var emailText: String?
            var passwordText: String?
            var orSignInText: String?
            var bottomTextAttributedString: NSAttributedString?
            var forgotPasswordText: String?
        }
        var userName: String?
        var password: String?
        var screenType: ScreenType = .signUp
    }
}
